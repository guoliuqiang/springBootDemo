version: '3'    #版本号
# 构建 zookeeper  token  bonus
networks:
  mynet:

services:   #服务，下一级均为服务名
  zookeeper:
    image: zookeeper:3.5.5
    restart: always
    container_name: zookeeper
    ports:
    - "2181:2181"
    expose:
    - "2181"
    environment:
    - ZOO_MY_ID=1
    networks:
    - mynet

    kafka:
      image: wurstmeister/kafka:2.12-2.2.1
      restart: always
      container_name: kafka
      environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_MESSAGE_MAX_BYTES=2000000
      ports:
      - "9092:9092"
      depends_on:
      - zookeeper
      networks:
      - mynet

    redis:
      image: redis
      container_name: redis01
      ports:
      - 6379:6379
      volumes:
      - /data/redis/redis.conf:/etc/redis/redis.conf
      - /data/redis/data:/data
      networks:
      - mynet
      command: redis-server /etc/redis/redis.conf --appendonly yes

  token:
    build:
      context: /data/belinkwallet/dockerfile
      dockerfile: belink
    tty: true  #添加控制终端
    container_name: token
    ports:
    - "10010:10010"       #映射端口:软件端口
    - "10011:10011"
    - "20010:20010"
    volumes:
    - /data/dubbobelink:/data/dubbobelink
    networks:
      - mynet

  bonus:
    build:
      context: /data/dubbobelink/dockerfile
      dockerfile: belink
    container_name: bonus                                                      #生成容器名
    tty: true
    ports:                                                                   #配置端口
    - "10021:10021"       #映射端口:软件端口
    - "10020:10020"
    - "20020:20020"
    volumes:
    - /data/dubbobelink:/data/dubbobelink
    networks:           #网络名（仅为一个标记，用来保证所有容器运行与同一网络下，保证容器间的互相通信的可行性）
    - mynet


